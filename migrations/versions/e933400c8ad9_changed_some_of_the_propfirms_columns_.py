"""Changed some of the PropFirms columns to optional

Revision ID: e933400c8ad9
Revises: 111af910ca38
Create Date: 2025-01-22 20:16:55.928950

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision = 'e933400c8ad9'
down_revision = '111af910ca38'
branch_labels = None
depends_on = None


def has_table(table_name):
    """Check if a table exists in the database"""
    bind = op.get_bind()
    inspector = Inspector.from_engine(bind)
    return table_name in inspector.get_table_names()


def has_column(table_name, column_name):
    """Check if a column exists in a table"""
    bind = op.get_bind()
    inspector = Inspector.from_engine(bind)
    return column_name in inspector.get_columns(table_name)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if has_table('prop_firms'):
        with op.batch_alter_table('prop_firms', schema=None) as batch_op:
            batch_op.alter_column('username',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=True,
                                  existing_server_default=sa.text("'default_user'"))
            batch_op.alter_column('password',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=True,
                                  existing_server_default=sa.text("'default_pass'"))
            batch_op.alter_column('ip_address',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=True,
                                  existing_server_default=sa.text("'127.0.0.1'"))
            batch_op.alter_column('port',
                                  existing_type=sa.INTEGER(),
                                  nullable=True,
                                  existing_server_default=sa.text("'8080'"))
            batch_op.alter_column('platform_type',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=True,
                                  existing_server_default=sa.text("'MT5'"))
            batch_op.alter_column('is_active',
                                  existing_type=sa.BOOLEAN(),
                                  nullable=True,
                                  existing_server_default=sa.text("'1'"))

            if not has_column('prop_firms', 'created_at'):
                batch_op.add_column(sa.Column('created_at', sa.DateTime(
                ), nullable=False, server_default=sa.func.now()))
            if not has_column('prop_firms', 'full_balance'):
                batch_op.add_column(
                    sa.Column('full_balance', sa.Float(), nullable=False))
            if not has_column('prop_firms', 'available_balance'):
                batch_op.add_column(
                    sa.Column('available_balance', sa.Float(), nullable=False))
            if not has_column('prop_firms', 'dowdown_percentage'):
                batch_op.add_column(
                    sa.Column('dowdown_percentage', sa.Float(), nullable=False))

    else:
        op.create_table('prop_firms',
                        sa.Column('id', sa.Integer(), primary_key=True),
                        sa.Column('name', sa.String(
                            length=100), nullable=False),
                        sa.Column('is_active', sa.Boolean(),
                                  nullable=False, server_default='1'),
                        sa.Column('username', sa.String(length=100),
                                  nullable=False, server_default='default_user'),
                        sa.Column('password', sa.String(length=100),
                                  nullable=False, server_default='default_pass'),
                        sa.Column('ip_address', sa.String(length=100),
                                  nullable=False, server_default='127.0.0.1'),
                        sa.Column('port', sa.Integer(), nullable=False,
                                  server_default='8080'),
                        sa.Column('platform_type', sa.String(length=100),
                                  nullable=False, server_default='MT5'),
                        sa.Column('created_at', sa.DateTime(),
                                  nullable=False, server_default=sa.func.now()),
                        sa.Column('full_balance', sa.Float(), nullable=False),
                        sa.Column('available_balance',
                                  sa.Float(), nullable=False),
                        sa.Column('dowdown_percentage',
                                  sa.Float(), nullable=False),
                        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if has_table('prop_firms'):
        with op.batch_alter_table('prop_firms', schema=None) as batch_op:
            batch_op.alter_column('platform_type',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=False,
                                  existing_server_default=sa.text("'MT5'"))
            batch_op.alter_column('port',
                                  existing_type=sa.INTEGER(),
                                  nullable=False,
                                  existing_server_default=sa.text("'8080'"))
            batch_op.alter_column('ip_address',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=False,
                                  existing_server_default=sa.text("'127.0.0.1'"))
            batch_op.alter_column('password',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=False,
                                  existing_server_default=sa.text("'default_pass'"))
            batch_op.alter_column('username',
                                  existing_type=sa.VARCHAR(length=100),
                                  nullable=False,
                                  existing_server_default=sa.text("'default_user'"))

            if has_column('prop_firms', 'created_at'):
                batch_op.drop_column('created_at')
            if has_column('prop_firms', 'full_balance'):
                batch_op.drop_column('full_balance')
            if has_column('prop_firms', 'available_balance'):
                batch_op.drop_column('available_balance')
            if has_column('prop_firms', 'dowdown_percentage'):
                batch_op.drop_column('dowdown_percentage')

    # ### end Alembic commands ###
