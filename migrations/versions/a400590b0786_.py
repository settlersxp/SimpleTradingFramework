"""empty message

Revision ID: a400590b0786
Revises: 74e57edae4bd
Create Date: 2025-02-24 20:38:12.617848

"""
from alembic import context, op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a400590b0786'
down_revision = '74e57edae4bd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if context.has_table('prop_firm_trades'):
        with op.batch_alter_table('prop_firm_trades', schema=None) as batch_op:
            # Check if the column 'platform_id' exists
            if not context.has_column('prop_firm_trades', 'platform_id'):
                batch_op.add_column(
                    sa.Column('platform_id', sa.Integer(), nullable=True))
            if not context.has_column('prop_firm_trades', 'response'):
                batch_op.add_column(
                    sa.Column('response', sa.JSON(), nullable=True))
    else:
        op.create_table('prop_firm_trades',
                        sa.Column('id', sa.Integer(), nullable=False),
                        sa.Column('prop_firm_id', sa.Integer(),
                                  nullable=False),
                        sa.Column('trade_pair_id',
                                  sa.Integer(), nullable=False),
                        sa.Column('platform_id', sa.Integer(), nullable=True),
                        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if context.has_table('prop_firm_trades'):
        with op.batch_alter_table('prop_firm_trades', schema=None) as batch_op:
            if context.has_column('prop_firm_trades', 'platform_id'):
                batch_op.drop_column('platform_id')
            if context.has_column('prop_firm_trades', 'response'):
                batch_op.drop_column('response')

    # ### end Alembic commands ###
